/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apps;

import javax.swing.JOptionPane;

/**
 *
 * @author vitoralencar
 */
public class Sobre extends javax.swing.JFrame {

    /**
     * Creates new form Sobre1
     */
    public Sobre() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtAbout = new javax.swing.JTextArea();
        btnHowToPlay = new javax.swing.JButton();
        pecaS = new pieces.PecaAboutS();
        pecaZ = new pieces.PecaAboutZ();
        pecaI = new pieces.PecaAboutI();
        pecaO = new pieces.PecaO();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtAbout.setEditable(false);
        txtAbout.setColumns(20);
        txtAbout.setRows(5);
        txtAbout.setText("Sobre o Projeto:\nEste jogo refere-se à um projeto desenvolvido\ndurante a unidade curricular de Programação \nOrientada à objetos, no curso de Licenciatura em\nEngenharia Informática. A autoria do jogo deriva\ndo aluno Vitor Hugo Alencar, estudante em \nturma de Erasmus no Instituto Politécnico de\nTomar.\n\nSobre o Tetris:\nTetris é um jogo eletrônico muito popular que foi\noriginalmente distribuído na União Soviética \ndurante a década de 1980. \nFoi desenvolvido pelos engenheiros Dmitry Pajitnov \ne Alexey Pavlovsky, juntamente com um aluno de \napenas 16 anos de idade, conhecido pelo nome de \nVadim Gerastimov.\n\nConceitos Abordados:\nEste jogo por mais simples que pareça em sua \nexecução, possuí atributos de grande valia \nque podem ser extraídos através do paradigma \nda Programação Orientada a Objetos.");
        jScrollPane1.setViewportView(txtAbout);

        btnHowToPlay.setText("How To Play");
        btnHowToPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHowToPlayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pecaS, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pecaZ, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnHowToPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pecaO, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pecaI, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pecaO, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pecaI, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnHowToPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(pecaS, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pecaZ, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHowToPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHowToPlayActionPerformed
        // TODO add your handling code here:
        
        JOptionPane.showMessageDialog(null, "Para jogar basta utilizar os comandos do teclado, sendo eles:" + "\n\n"
                                            + "Seta indicativa para esquerda: Faz com que o bloco vá para a esquerda.\n"
                                            + "Seta indicativa para direita: Faz com que o bloco vá para a direita.\n"
                                            + "Seta indicativa para baixo: Faz com que os blocos desçam mais rapidamente.\n"
                                            + "Tecla A: Faz com que os blocos rotacionem à esquerda (se puderem).\n"
                                            + "Tecla D: Faz com que os blocos rotacionem à direita (se puderem).\n"
                                            + "Também é possível jogar através do mouse:\n"
                                            + "Botão direito do mouse: Faz com que o bloco vá para a direita\n"
                                            + "Botão esquerdo do mouse: Faz com que o bloco vá para a esquerda\n"
                                            + "------------------------------------------------------------------------\n\n"
                                            + "Sistema de Pontuação:\n\n"
                                            + "O jogador acumula 1 ponto quando o jogo gera uma nova peça.\n"
                                            + "A cada linha que o jogador completa com os blocos é acumulado mais 5 pontos.\n\n"
                                            
                                            + "Dica: Fique o máximo de tempo que conseguir para gerar peças e acumular os pontos.\n\n"
                                            + "Divirta-se!"
        );
        
    }//GEN-LAST:event_btnHowToPlayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sobre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sobre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sobre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sobre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sobre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHowToPlay;
    private javax.swing.JScrollPane jScrollPane1;
    private pieces.PecaAboutI pecaI;
    private pieces.PecaO pecaO;
    private pieces.PecaAboutS pecaS;
    private pieces.PecaAboutZ pecaZ;
    private javax.swing.JTextArea txtAbout;
    // End of variables declaration//GEN-END:variables
}
