package apps;

import gameDatas.Player;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author vitoralencar
 */

public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        btnCadastrar = new javax.swing.JButton();
        btnLogar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela de Login");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridLayout(6, 1));

        jLabel1.setText("Nome:");
        jPanel1.add(jLabel1);
        jPanel1.add(txtNome);

        jLabel2.setText("Login:");
        jPanel1.add(jLabel2);
        jPanel1.add(txtLogin);

        jLabel3.setText("Senha:");
        jPanel1.add(jLabel3);
        jPanel1.add(txtSenha);

        jPanel2.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        btnCadastrar.setBackground(java.awt.SystemColor.controlHighlight);
        btnCadastrar.setText("Cadastrar Login");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        jPanel2.add(btnCadastrar);

        btnLogar.setText("Já Tenho Login");
        btnLogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogarActionPerformed(evt);
            }
        });
        jPanel2.add(btnLogar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        
        String nome = txtNome.getText();
        String login = txtLogin.getText();
        String senha = txtSenha.getText();
        
        if(nome.equals("") || login.equals("")){
            JOptionPane.showMessageDialog(null, "Campo Nome ou Login nulos!");
        } else try {
            if(existsLogin(login, "highscore")){
                JOptionPane.showMessageDialog(null, "Login já existente!");
            }
            else {
                Player newPlayer = new Player(nome, login, senha);
                
                if(writeDate("dados", newPlayer.getNome() + ":" + newPlayer.getLogin() + ":" + newPlayer.getSenha()+":"+newPlayer.getPontos()) 
                && writeHighScore("highscore", newPlayer.getLogin() + ":" + newPlayer.getPontos()))
                    JOptionPane.showMessageDialog(null, "Player registrado com sucesso!");
                
                this.nomes = newPlayer.getNome();
                dispose();
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar!");
        }
        
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnLogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogarActionPerformed
        // TODO add your handling code here:
        String login;
        String nome;
        
        nome = JOptionPane.showInputDialog("Digite seu nome:");
        login = JOptionPane.showInputDialog("Digite o login:");
        
        
        try {
            
            if(!existsLogin(login, "highscore"))
                JOptionPane.showMessageDialog(null, "Esse login não está cadastrado");
            else{
                JOptionPane.showMessageDialog(null, "Bem vindo " + nome);
            }
        } catch (IOException ex) {
            System.out.println("Erro ao localizar");
        }
        
        if(writeDate("dados", nome + ":" + login + ":" + ":" + "0")){
            
        }
        
        dispose();
    
        
    }//GEN-LAST:event_btnLogarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    
    String nomes = "";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnLogar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables

    
    /*public Player getNewPlayer(){
        return this.newPlayer;
    }*/
    
    public static boolean writeHighScore(String caminho, String conteudo){
        
        try{
            FileWriter arq = new FileWriter(caminho, true);
            PrintWriter gravarArq = new PrintWriter(arq);
            gravarArq.println(conteudo);
            gravarArq.close();
            return true;
        }
        catch(IOException e){
            return false;
        }
        
    }
    
    public static boolean writeDate(String caminho, String conteudo){
        
        try{
            FileWriter arq = new FileWriter(caminho);
            PrintWriter gravarArq = new PrintWriter(arq);
            gravarArq.println(conteudo);
            gravarArq.close();
            return true;
        }
        catch(IOException e){
            return false;
        }
        
    }
    
    public static String read(String caminho) throws FileNotFoundException, IOException{
        String conteudo = "";
            
        try {
            FileReader arq = new FileReader(caminho);
            BufferedReader lerArq = new BufferedReader(arq);
            
            String linha = "";
                     
            try {
                linha = lerArq.readLine();
                while(linha != null){
                    conteudo += linha + "\n";
                    linha = lerArq.readLine();
                }
                arq.close();
                return conteudo;
            }
            catch(IOException e){
                System.out.println("Erro. Não foi possível ler o arquivo. " + e);
                return "";
            }
            
        }
        catch (FileNotFoundException e) {
            System.out.println("Erro. Não foi possível encontrar o arquivo! " + e.toString());
            return "";
        }            
    }
    
    public boolean existsLogin(String login, String caminho) throws IOException{
        
        String conteudo = read(caminho);
        
        String dados[] = conteudo.split("\n");
        
        for (String dado : dados) {
            
            if(dado.contains(login)){
                return true;
            }
            
        }
        
        return false;
    }
    
}

